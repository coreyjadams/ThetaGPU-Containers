Bootstrap: docker
From: nvidia/cuda:11.5.1-cudnn8-devel-ubuntu20.04

%help

To start your container simply try
singularity exec THIS_CONTAINER.simg bash

To use GPUs, try
singularity exec --nv THIS_CONTAINER.simg bash

%labels
Maintainer coreyjadams

%environment

    export PATH=$PATH:/usr/local/mpich//install/bin
    export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/mpich//install/lib

%post

    export DEBIAN_FRONTEND=noninteractive
    echo "deb [by-hash=no] http://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64 /" > /etc/apt/sources.list.d/cuda.list

    export http_proxy=http://theta-proxy.tmi.alcf.anl.gov:3128
    export https_proxy=https://theta-proxy.tmi.alcf.anl.gov:3128

    apt-get update -y
    apt-get install -y build-essential

    # Download tools
    apt-get install -y wget curl git

    apt-get install -y python3-pip

    # install MPICH
    wget -q https://www.mpich.org/static/downloads/3.4.3/mpich-3.4.3.tar.gz
    tar xf mpich-3.4.3.tar.gz
    rm mpich-3.4.3.tar.gz
    cd mpich-3.4.3

    # disable the addition of the RPATH to compiled executables
    # this allows us to override the MPI libraries to use those
    # found via LD_LIBRARY_PATH
    ./configure --prefix=/usr/local/mpich/install --disable-wrapper-rpath \
    --with-device=ch4:ofi --disable-fortran
    make -j 64 install
    # add to local environment to build pi.c
    export PATH=$PATH:/usr/local/mpich//install/bin
    export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/mpich//install/lib
    env | sort
    cd ..
    rm -rf mpich-3.4.3



    # Install mpi4py
    CC=$(which mpicc) CXX=$(which mpicxx) pip install --no-cache-dir mpi4py

    # Install HDF5
    #git clone https://github.com/HDFGroup/hdf5.git
    #cd hdf5
    #git checkout hdf5-1_12_0
    #./configure --prefix=/usr/
    #make -j 128 install
    #cd -

    # Install python packages:
    #pip install scikit-build
    #pip install numpy
    #pip install --upgrade hydra-core --pre
    #pip install hydra-core>1.1.0

    # Install larcv3:
    #git clone https://github.com/DeepLearnPhysics/larcv3.git
    #cd larcv3
    #git submodule update --init
    #python setup.py build -j 128
    #python setup.py install -j 128
